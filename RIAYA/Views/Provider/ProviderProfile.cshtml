@model RIAYA.Models.Provider

@{
    ViewData["Title"] = "Provider Profile";
    Layout = "_ProviderLayout";
}

@section Style {
    <link rel="stylesheet" href="~/css/providerProfile.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.min.css">
}

<div class="container-fluid py-5">
    <div class="row justify-content-center">
        <!-- Profile Card -->
        <div class="col-lg-5 mb-4">
            <div class="card profile-card">
                <div class="card-body text-center p-4">
                    <div class="profile-image-container">
                        <img src="~/images/@(Model.ProfileImage ?? "default-profile.png")" alt="Profile Image" class="profile-image">
                    </div>
                    <h4 class="mb-2" style="color: #053D76;">@Model.User.FullName</h4>
                    <p class="text-muted mb-4">@Model.Specialization</p>
                    <div class="d-flex justify-content-center gap-3">
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editProfileModal">
                            <i class="fas fa-edit me-2"></i>Edit Profile
                        </button>
                        <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#changePasswordModal">
                            <i class="fas fa-key me-2"></i>Change Password
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Profile Details -->
        <div class="col-lg-7">
            <div class="card">
                <div class="card-body p-4">
                    <h5 class="card-title">Profile Information</h5>
                    <div class="row profile-info">
                        <div class="col-md-6 mb-4">
                            <label>Full Name</label>
                            <p>@Model.User.FullName</p>
                        </div>
                        <div class="col-md-6 mb-4">
                            <label>Email</label>
                            <p>@Model.User.Email</p>
                        </div>
                        <div class="col-md-6 mb-4">
                            <label>Phone</label>
                            <p>@Model.User.Phone</p>
                        </div>
                        <div class="col-md-6 mb-4">
                            <label>City</label>
                            <p>@Model.User.City</p>
                        </div>
                        <div class="col-md-6 mb-4">
                            <label>Specialization</label>
                            <p>@Model.Specialization</p>
                        </div>
                        <div class="col-md-6 mb-4">
                            <label>Years of Experience</label>
                            <p>@Model.YearsOfExperience years</p>
                        </div>
                        <div class="col-12 mb-4">
                            <label>Bio</label>
                            <p>@Model.Bio</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Profile Modal -->
<div class="modal fade" id="editProfileModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editProfileForm" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Full Name</label>
                            <input type="text" class="form-control" name="fullName" value="@Model.User.FullName" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Email</label>
                            <input type="email" class="form-control" name="email" value="@Model.User.Email" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Phone</label>
                            <input type="tel" class="form-control" name="phone" value="@Model.User.Phone" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">City</label>
                            <input type="text" class="form-control" name="city" value="@Model.User.City" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Specialization</label>
                            <input type="text" class="form-control" name="specialization" value="@Model.Specialization" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Years of Experience</label>
                            <input type="number" class="form-control" name="yearsOfExperience" value="@Model.YearsOfExperience" required>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label">Bio</label>
                            <textarea class="form-control" name="bio" rows="3">@Model.Bio</textarea>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label">Profile Image</label>
                            <input type="file" class="form-control" name="profileImage" accept="image/*">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="updateProfile()">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Change Password Modal -->
<div class="modal fade" id="changePasswordModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Change Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="changePasswordForm">
                    <div class="mb-3">
                        <label class="form-label">Current Password</label>
                        <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">New Password</label>
                        <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Confirm New Password</label>
                        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="changePassword()">Change Password</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.all.min.js"></script>
    <script>
        function updateProfile() {
            const form = document.getElementById('editProfileForm');
            const formData = new FormData(form);

            fetch('/Provider/UpdateProfile', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: data.message,
                        icon: 'success',
                        confirmButtonColor: '#053D76',
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            location.reload();
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message,
                        icon: 'error',
                        confirmButtonColor: '#053D76',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while updating the profile.',
                    icon: 'error',
                    confirmButtonColor: '#053D76',
                    confirmButtonText: 'OK'
                });
            });
        }

        function changePassword() {
            const currentPassword = document.getElementById('currentPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            if (!currentPassword || !newPassword || !confirmPassword) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Please fill in all password fields',
                    icon: 'error',
                    confirmButtonColor: '#053D76',
                    confirmButtonText: 'OK'
                });
                return;
            }

            if (newPassword !== confirmPassword) {
                Swal.fire({
                    title: 'Error!',
                    text: 'New passwords do not match!',
                    icon: 'error',
                    confirmButtonColor: '#053D76',
                    confirmButtonText: 'OK'
                });
                return;
            }

            fetch('/Provider/ChangePassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    currentPassword: currentPassword,
                    newPassword: newPassword
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: data.message,
                        icon: 'success',
                        confirmButtonColor: '#053D76',
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Clear the form
                            document.getElementById('changePasswordForm').reset();
                            // Close the modal
                            const modal = bootstrap.Modal.getInstance(document.getElementById('changePasswordModal'));
                            modal.hide();
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message,
                        icon: 'error',
                        confirmButtonColor: '#053D76',
                        confirmButtonText: 'OK'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while changing the password.',
                    icon: 'error',
                    confirmButtonColor: '#053D76',
                    confirmButtonText: 'OK'
                });
            });
        }
    </script>
}
